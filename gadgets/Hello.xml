<!--
 From https://developers.google.com/gmail/contextual_gadgets#hello_world_example_code 
-->

<Module>
<ModulePrefs title="Create Redmine issue" description="Create issue from email body" height="20" author="Martin Růžička" author_email="martin.ruzicka@eman.cz" author_location="Prague, Czech Republic">
<Require feature="dynamic-height"/>
<Require feature="google.contentmatch">
<Param name="extractors">google.com:EmailBodyExtractor</Param>
</Require>
</ModulePrefs>
<Content type="html" view="card">
<![CDATA[
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script type="text/javascript">
	
	var REDMINE_API_KEY = "acfc408436a5d9a15a028b986e91a5cd8ed29963";
	var DOMAIN = "https://redmine2.dev.eman.cz";
		
		function createIssue() {
			var xhttp = new XMLHttpRequest();
	  		xhttp.onreadystatechange = function() {
	    			if (xhttp.readyState == 4 && xhttp.status == 201) {
	    				var object = JSON.parse(xhttp.responseText);
					var win = window.open( DOMAIN + '/issues/' + object.issue.id.toString(), '_blank');
					if(win) {
    						//Browser has allowed it to be opened
    						win.focus();
 					} else {
						//Broswer has blocked it
    						alert('Please allow popups for this site');
					}
		    		} else { }
			}
	  
	  	   	xhttp.open("POST", DOMAIN + "/issues.json", true);
		   	xhttp.setRequestHeader("Content-Type", "application/json");
	   	   	xhttp.setRequestHeader("X-Redmine-API-Key", REDMINE_API_KEY);
		   
		   	var e = document.getElementById("IDForSelect");
		   	var strProjectID = e.options[e.selectedIndex].value;
		   	
		   	matches = google.contentmatch.getContentMatches();        
        		var bodyText = matches[0]["email_body"];
        		
        		var issue = document.getElementById("MyTextField");
		   	var name = issue.value;
		   	
		   	var data = '{"issue":{"subject":"' + name + '","description":"' + bodyText + '"},"project_id":"' + strProjectID + '"}';
	  	   	xhttp.send(data);
	    	}; 
		
		var xhttp = new XMLHttpRequest();
	  	xhttp.onreadystatechange = function() {
	    		if (xhttp.readyState == 4 && xhttp.status == 200) {
				var object = JSON.parse(xhttp.responseText);					
				var select = document.createElement("select");
				select.setAttribute("id", "IDForSelect");

				for (var i = 0; i < object.projects.length; i++) {
			    		var x = document.createElement("option");
			    		x.setAttribute("value", object.projects[i].identifier);
			    		var t = document.createTextNode(object.projects[i].name);
			    		x.appendChild(t);
			    		select.appendChild(x);
				}
				document.body.appendChild(select);
	    		} else { }
	  	};
	  xhttp.open("GET", DOMAIN + "/projects.json", true);
	  xhttp.setRequestHeader("X-Redmine-API-Key", REDMINE_API_KEY);
	  xhttp.send();
	
	var btn = document.createElement("BUTTON");        // Create a <button> element
	btn.onclick = createIssue;
	var t = document.createTextNode("Vytvořit issue");       // Create a text node
	btn.appendChild(t);                                // Append the text to <button>
	document.body.appendChild(btn);                    // Append <button> to <body>
	
	var field = document.createElement("INPUT");
	field.setAttribute("type", "text");
	field.setAttribute("id", "MyTextField");
	field.setAttribute("value", "Nový úkol");
	document.body.appendChild(field);
	
	var x = window.parent.getElementsByClassName("a3s aXjCH");
</script>
  <script type="text/javascript">
    // Your Client ID can be retrieved from your project in the Google
    // Developer Console, https://console.developers.google.com
    var CLIENT_ID = '308244421658-p0772f91bek31loqrv2961vkvhok7kg8.apps.googleusercontent.com';

    var SCOPES = ['https://www.googleapis.com/auth/gmail.readonly'];

	var button = document.createElement('button');
	  button.innerHTML = 'Authorize';
	  button.id = "authorize-button";
	  button.onclick = function(){
	      gapi.auth.authorize(
	        {client_id: CLIENT_ID, scope: SCOPES, immediate: false},
	        handleAuthResult);
	      return false;
	  }
	  // where do we want to have the button to appear?
	  // you can append it to another element just by doing something like
	  // document.getElementById('foobutton').appendChild(button);
	  document.body.appendChild(button);
	  
	  var pre = document.createElement('pre');
	  pre.id = "output";
	  document.body.appendChild(pre);

    /**
     * Check if current user has authorized this application.
     */
    function checkAuth() {
      gapi.auth.authorize(
        {
          'client_id': CLIENT_ID,
          'scope': SCOPES.join(' '),
          'immediate': true
        }, handleAuthResult);
    }

    /**
     * Handle response from authorization server.
     *
     * @param {Object} authResult Authorization result.
     */
    function handleAuthResult(authResult) {
      var authorizeDiv = document.getElementById('authorize-div');
      if (authResult && !authResult.error) {
        // Hide auth UI, then load client library.
        authorizeDiv.style.display = 'none';
        loadGmailApi();
      } else {
        // Show auth UI, allowing the user to initiate authorization by
        // clicking authorize button.
        authorizeDiv.style.display = 'inline';
      }
    }

    /**
     * Initiate auth flow in response to user clicking authorize button.
     *
     * @param {Event} event Button click event.
     */
    function handleAuthClick(event) {
      gapi.auth.authorize(
        {client_id: CLIENT_ID, scope: SCOPES, immediate: false},
        handleAuthResult);
      return false;
    }

    /**
     * Load Gmail API client library. List labels once client library
     * is loaded.
     */
    function loadGmailApi() {
      gapi.client.load('gmail', 'v1', listLabels);
    }

    /**
     * Print all Labels in the authorized user's inbox. If no labels
     * are found an appropriate message is printed.
     */
    function listLabels() {
      var request = gapi.client.gmail.users.getProfile({
        'userId': 'me'
      });

      request.execute(function(resp) {
        var labels = resp.labels;
        appendPre('Labels:');
	  appendPre(resp.emailAddress);
      });
    }

    /**
     * Append a pre element to the body containing the given message
     * as its text node.
     *
     * @param {string} message Text to be placed in pre element.
     */
    function appendPre(message) {
      var pre = document.getElementById('output');
      var textContent = document.createTextNode(message + '\n');
      pre.appendChild(textContent);
    }

  </script>
  <script src="https://apis.google.com/js/client.js?onload=checkAuth">
  </script>
]]>
</Content>
</Module>
